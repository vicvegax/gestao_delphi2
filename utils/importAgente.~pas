unit importAgente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.StdCtrls,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.DBGrids, StrUtils,
  Vcl.Buttons;

type
  TfImportAgente = class(TForm)
    Button1: TButton;
    dlgA: TOpenDialog;
    Memo1: TMemo;
    dsA: TDataSource;
    grA: TDBGrid;
    btCancelar: TBitBtn;
    Memo2: TMemo;
    Label1: TLabel;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  fImportAgente: TfImportAgente;

implementation

{$R *.dfm}

uses modDados, modFuncoes;

procedure TfImportAgente.Button1Click(Sender: TObject);
var
  csv, parse: TStringList;
  st, cod, descr: string;
  stJ, stA: String;
  i, j: integer;
  tbA: TFDMemTable;

  qtUniI, qtPesI: Integer;
  qtUniA, qtPesA: Integer;
begin

  if dlgA.Execute() then begin
    tbA:= TFDMemTable.Create(Self);
    //tbA.FieldDefs.Clear;
    parse:= TStringList.Create;
    parse.StrictDelimiter:= true;
    parse.Delimiter:= ';';
    for i := 0 to Memo1.Lines.Count-1 do begin
      parse.DelimitedText:= memo1.Lines[i];
      tbA.FieldDefs.Add(parse[0], ftString, strtoint(parse[1]));
    end;

    tbA.CreateDataSet;
    for i := 0 to Memo1.Lines.Count-1 do begin
      parse.DelimitedText:= memo1.Lines[i];
      tbA.FieldByName(parse[0]).DisplayLabel:= parse[2];
    end;
    tbA.Open;

    csv:= TStringList.Create;
    csv.LoadFromFile(dlgA.FileName);
    st:= csv[0];
    parse.DelimitedText:= st;
    for i := 0 to parse.Count-1 do begin
      for j := 0 to tbA.FieldCount-1 do begin
        st:= tbA.Fields[j].DisplayLabel;
        if st = parse[i] then begin
          tbA.Fields[j].Tag:= i+1;
        end;
      end;
    end;

    if (tbA.FieldByName('ativo').Tag = 0) or
       (tbA.FieldByName('nrins').Tag = 0) or
       (tbA.FieldByName('agatu').Tag = 0) or
       (tbA.FieldByName('descr').Tag = 0) or 
       (tbA.FieldByName('cod').Tag = 0) then begin
       csv.Free;
       parse.Free;
       tba.Close;
       freeandnil(tbA);
      MsgErro('Arquivo CSV não é valido! Ele deve conter: '#13#10 + Memo2.Lines.Text);
      exit;
    end;
        

    tbA.DisableControls;
    for i := 1 to csv.Count-1 do begin
      parse.DelimitedText:= csv[i];
      tbA.Append;
      tbA.FieldByName('agatu').AsString:= '';
      for j := 0 to tbA.FieldCount-1 do begin
        if tbA.Fields[j].Tag > 0 then
          tbA.Fields[j].AsVariant:= parse[tbA.Fields[j].Tag-1];
      end;

      st:= tbA.FieldByName('agatu').AsString;
      if st <> '' then begin
        cod:= '';
        j:= 1;
        while True do begin
          if st[j] = '-' then break;
          if st[j] <> ' ' then cod:= cod + st[j];
          inc(j);
        end;
        cod:= rightstr('0000'+cod,4);
        descr:= rightstr(st, st.Length-j-1);
      end;
      tbA.FieldByName('nrins').AsString:= soNumero(tbA.FieldByName('nrins').AsString);
      tbA.FieldByName('fone1').AsString:= soNumero(tbA.FieldByName('fone1').AsString);
      tbA.FieldByName('fone2').AsString:= soNumero(tbA.FieldByName('fone2').AsString);
      tbA.FieldByName('agencia').AsString:= soNumeroX(tbA.FieldByName('agencia').AsString);
      tbA.FieldByName('conta').AsString:= soNumeroX(tbA.FieldByName('conta').AsString);
      tbA.FieldByName('tpconta').AsString:= '0';
      if tbA.FieldByName('tpconta').AsString = 'CC' then tbA.FieldByName('tpconta').AsString:= '1';
      if tbA.FieldByName('tpconta').AsString = 'P' then tbA.FieldByName('tpconta').AsString:= '2';

      if tbA.FieldByName('ativo').AsString = 'INATIVO' then tbA.FieldByName('ativo').AsString:= '0'
      else tbA.FieldByName('ativo').AsString:= '1';

      tbA.FieldByName('cduni').AsString:= cod;
      tbA.FieldByName('dsuni').AsString:= descr;
      tbA.Post;
    end;
    tbA.First;
    tbA.EnableControls;
    csv.Free;
    parse.Free;
    dsA.DataSet:= tbA;
    Application.ProcessMessages;




    ///////////////////////////////////////////////////////////////////////
    ///  Início Alteração da Base de Dados
    ///
    ///  /////////////////////////////////////////////////////////////////

    DM.qyUni.Open();
    DM.qyPes.Filtered:= False;
    DM.qyPes.IndexFieldNames:= 'nr_ins';
    DM.qyPes.Open();
    DM.DBTRANS.StartTransaction;

    qtUniI:= 0;
    qtPesI:= 0;
    qtUniA:= 0;
    qtPesA:= 0;
    while not tbA.Eof do begin
      tbA.Edit;
      
      if tbA.FieldByName('ativo').AsString = '1' then begin
        if DM.qyUni.Locate('cod', tbA.FieldByName('cduni').AsString, []) then begin
          st:= 'L';
          if DM.qyUni.FieldByName('UF').AsString <> tbA.FieldByName('UF').AsString then begin
            st:= st + 'U';
            DM.qyUni.Edit;
            stJ:= DM.qyUni.FieldByName('UF').AsString;
            DM.qyUni.FieldByName('UF').AsString:= tbA.FieldByName('UF').AsString;
            DM.qyUni.FieldByName('us_alt').AsInteger:= wUsuario;
            DM.qyUni.FieldByName('dt_alt').AsDateTime:= now;
            DM.adicionaLog(DM.qyUni, eALT, 'IMPORTACAO - MUDADO UF ' + stJ);
            DM.qyUni.Post;
            inc(qtUniA);
          end;
            
          tbA.FieldByName('exuni').AsString:= st;
        end else begin
          tbA.FieldByName('exuni').AsString:= 'N';
          with DM.qyUni do begin
            Append;
            FieldByName('cod').AsString:= tbA.FieldByName('cduni').AsString;
            FieldByName('ponto').AsString:= '01';
            FieldByName('descr').AsString:= tbA.FieldByName('dsuni').AsString;
            FieldByName('UF').AsString:= tbA.FieldByName('UF').AsString;
            FieldByName('ativo').AsInteger:= 1;
            FieldByname('us_inc').AsInteger:= wUsuario;
            FieldByName('dt_inc').AsDateTime:= Now;
            DM.adicionaLog(DM.qyUni, logIncluido, 'IMPORTACAO');
            Post;
            inc(qtUniI);
          end;
          DM.qyUni.Locate('cod', tbA.FieldByName('cduni').AsString, []);
        end;
      end;

      st:= tbA.FieldByName('nrins').AsString;
      if DM.qyPes.Locate('nr_ins', st, []) then begin
        st:= 'L';
        stJ:= '';
        stA:= '';
        if DM.qyPes.FieldByName('cod').AsString <> tbA.FieldByName('cod').AsString then
          stJ:= 'J';
        if DM.qyPes.FieldByName('ativo').AsString <> tbA.FieldByName('ativo').AsString then
          stA:= tbA.FieldByName('ativo').AsString;

        st:= st + stJ + stA;
        tbA.FieldByName('exage').AsString:= st;
        if (stA <> '') or (stJ <> '') then begin
          DM.qyPes.Edit;
          if stJ <> '' then begin
            stJ:= DM.qyPes.FieldByName('cod').AsString;
            DM.qyPes.FieldByName('cod').AsString:= tbA.FieldByName('cod').AsString;
          end;
          if stA <> '' then begin
            stA:= DM.qyPes.FieldByName('ativo').AsString;
            DM.qyPes.FieldByName('ativo').AsString:= tbA.FieldByName('ativo').AsString;
          end;
          DM.qyPes.FieldByName('us_alt').AsInteger:= wUsuario;
          DM.qyPes.FieldByName('dt_alt').AsDateTime:= Now;
          DM.adicionaLog(DM.qyPes, eALT, 'IMPORTACAO - MUDADO COD (' + stJ + ') OU ATIVO(' + stA + ')');
          DM.qyPes.Post;
          inc(qtPesA);
        end;
        //tbA.FieldByName('exuni').AsString:= '0';
      end else begin
        if tbA.FieldByName('ativo').AsString = '1' then begin
          tbA.FieldByName('exage').AsString:= 'N'; 
          with DM.qyPes do begin
            Append;
            FieldByName('tp_pes').AsInteger:= cTipoAgente;
            FieldByName('id_uni').AsInteger:= DM.qyUni.FieldByName('id').AsInteger;
            FieldByName('tp_ins').AsInteger:= cTipoCPF;
            FieldByName('nr_ins').AsString:= tbA.FieldByName('nrins').AsString;
            FieldByName('cod').AsString:= tbA.FieldByName('cod').AsString;
            FieldByName('descr').AsString:= tbA.FieldByName('descr').AsString;
            FieldByNAme('banco').AsString:= '001';
            FieldByName('agencia').AsString:= tbA.FieldByName('agencia').AsString;
            FieldByName('nr_conta').AsString:= tbA.FieldByName('conta').AsString;
            FieldByName('tp_conta').AsInteger:= tbA.FieldByName('tpconta').AsInteger;
            FieldByName('fone1').AsString:= tbA.FieldByName('fone1').AsString;
            FieldByName('fone2').AsString:= tbA.FieldByName('fone2').AsString;
            FieldByName('email').AsString:= tbA.FieldByName('email').AsString;
            FieldByName('ativo').AsInteger:= 1;
            FieldByName('us_inc').AsInteger:= wUsuario;
            FieldByName('dt_inc').AsDateTime:= Now;
            DM.adicionaLog(DM.qyPes,logIncluido,'IMPORTACAO');
            Post;
            inc(qtPesI);
          end;
          
        end;
      end;
      tbA.Post;
      tbA.Next;
    end;
    DM.DBTRANS.Commit;
    DM.qyPes.Close;
    DM.qyPes.IndexName:= '';
    DM.qyUni.Close;
    ShowMessage(Format('Tudo Concluído! Foram alterados %d Centro(s) de Custo e %d Agente(s). Foram incluídos %d Centro(s) de Custo e %d Agente(s).', [qtUniA, qtPesA, qtUniI, qtPesI]));
    //Application.ProcessMessages;
    //Sleep(3000);
    tba.Close;
    FreeAndNil(tba);
    Close;
  end;

end;

end.
